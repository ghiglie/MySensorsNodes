#define MY_DEBUG
#define MY_BAUD_RATE 9600
#define MY_RADIO_RF24
#define MY_GATEWAY_ESP8266
#define MY_WIFI_SSID "..."
#define MY_WIFI_PASSWORD "..."

#define MY_HOSTNAME "MySensorsGateway"

#define MY_PORT 5003
#define MY_GATEWAY_MAX_CLIENTS 10

#define MY_INCLUSION_MODE_FEATURE
#define MY_INCLUSION_BUTTON_FEATURE
#define MY_INCLUSION_MODE_DURATION 60
#define MY_INCLUSION_MODE_BUTTON_PIN D1
#define MY_INCLUSION_LED_PIN 2

#define MY_DEFAULT_LED_BLINK_PERIOD 300

#define MY_DEFAULT_ERR_LED_PIN 2
#define MY_DEFAULT_RX_LED_PIN  16
#define MY_DEFAULT_TX_LED_PIN  16

#include <ArduinoOTA.h>
#include <MySensors.h>

void setup()
{
	// Setup locally attached sensors
	ArduinoOTA.onStart([]() {
		Serial.println("ArduinoOTA start");
	});
	ArduinoOTA.onEnd([]() {
		Serial.println("\nArduinoOTA end");
	});
	ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {
		Serial.printf("OTA Progress: %u%%\r", (progress / (total / 100)));
	});
	ArduinoOTA.onError([](ota_error_t error) {
		Serial.printf("Error[%u]: ", error);
		if (error == OTA_AUTH_ERROR) {
			Serial.println("Auth Failed");
		} else if (error == OTA_BEGIN_ERROR) {
			Serial.println("Begin Failed");
		} else if (error == OTA_CONNECT_ERROR) {
			Serial.println("Connect Failed");
		} else if (error == OTA_RECEIVE_ERROR) {
			Serial.println("Receive Failed");
		} else if (error == OTA_END_ERROR) {
			Serial.println("End Failed");
		}
	});
	ArduinoOTA.begin();
}

void presentation()
{
	// Present locally attached sensors here
}

void loop()
{
	// Send locally attached sensors data here
	ArduinoOTA.handle();
}
